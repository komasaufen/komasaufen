# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          - name: Setup Java JDK
used: actions/setup-java@v3.12.0
   з :
    # Версія Java для налаштування. Приймає повну або напівверсію Java. Дивіться приклади підтримуваного синтаксису у файлі README
    java-версія: # необов'язковий
    # Шлях до файлу `.java-version`. Дивіться приклади підтримуваного синтаксису у файлі README
    java-version-file: # необов'язковий
    # Дистрибутив Java. Перегляньте список підтримуваних дистрибутивів у файлі README
    розподіл:
    # Тип пакета (jdk, jre, jdk+fx, jre+fx)
    java-пакет: # необов'язковий, за замовчуванням jdk
    # Архітектура пакету (за замовчуванням архітектура програми виконання дій)
    архітектура: # необов'язкова
    # Шлях до місця розташування стисненого JDK
    jdkFile: # необов'язковий
    # Встановіть цей параметр, якщо ви хочете, щоб дія перевіряла останню доступну версію, яка задовольняє специфікації версії
    перевірка останнього: # необов'язковий
    # ID репозиторію distributionManagement у файлі pom.xml. Типовим є `github`
    server-id: # необов’язковий, за умовчанням github
    # Назва змінної середовища для імені користувача для автентифікації в репозиторії Apache Maven. За замовчуванням $GITHUB_ACTOR
    server-username: # необов’язковий, за умовчанням GITHUB_ACTOR
    # Назва змінної середовища для пароля або маркера для автентифікації в репозиторії Apache Maven. За замовчуванням $GITHUB_TOKEN
    пароль сервера: # необов'язковий, за замовчуванням GITHUB_TOKEN
    # Шлях до місця, де буде записаний файл settings.xml. За замовчуванням ~/.m2.
    шлях налаштувань: # необов'язковий
    # Перезаписати файл settings.xml, якщо він існує. За умовчанням встановлено "true".
    overwrite-settings: # необов’язковий, за замовчуванням — true
    # Закритий ключ GPG для імпорту. За умовчанням порожній рядок.
    gpg-private-key: # необов'язковий
    # Назва змінної середовища для парольної фрази закритого ключа GPG. Типовим є $GPG_PASSPHRASE.
    gpg-passphrase: # необов'язковий
    # Назва платформи збірки для кешування залежностей. Це може бути "maven", "gradle" або "sbt".
    кеш: # необов'язковий
    # Обхідний шлях для передачі статусу завдання на етап публікації завдання. Ця змінна не призначена для ручного налаштування
    job-status: # необов’язковий, за умовчанням ${{ job.status }}
    # Маркер, який використовується для автентифікації під час отримання маніфестів версій, розміщених на github.com, наприклад для Microsoft Build OpenJDK. Під час виконання цієї дії на github.com достатньо значення за умовчанням. Під час роботи на GHES ви можете передати особистий маркер доступу для github.com, якщо у вас є обмеження швидкості.
    маркер: # необов’язковий, за умовчанням ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Ім’я ідентифікатора Maven Toolchain, якщо назва за умовчанням «${distribution}_${java-version}» не потрібна. Дивіться приклади підтримуваного синтаксису у файлі Advanced Usage
    mvn-toolchain-id: # необов'язковий
    # Назва постачальника Maven Toolchain, якщо назва за замовчуванням "${distribution}" не потрібна. Дивіться приклади підтримуваного синтаксису у файлі Advanced Usage
    mvn-toolchain-vendor: # необов'язковий
    - назва: середовище налаштування Node.js
  використовує: actions/setup-node@v3.8.1
  з:
    # Встановити завжди автентифікацію в npmrc.
    always-auth: # необов’язковий, за умовчанням false
    # Специфікація версії для використання. Приклади: 12.x, 10.15.1, >=10.15.0.
    node-version: # необов'язковий
    # Файл, що містить специфікацію версії для використання. Приклади: .nvmrc, .node-version, .tool-versions.
    node-version-file: # необов'язковий
    # Цільова архітектура для Node для використання. Приклади: x86, x64. Буде використовувати системну архітектуру за замовчуванням.
    архітектура: # необов'язкова
    # Встановіть цей параметр, якщо ви хочете, щоб дія перевіряла останню доступну версію, яка задовольняє специфікації версії.
    перевірка останнього: # необов'язковий
    # Додатковий реєстр для налаштування авторизації. Буде встановлено реєстр у файлі .npmrc і .yarnrc на рівні проекту та налаштовано авторизацію для читання з env.NODE_AUTH_TOKEN.
    URL-адреса реєстру: # необов'язковий
    # Додаткова область для автентифікації щодо реєстрів із обмеженою областю. Повернеться до власника сховища під час використання реєстру пакетів GitHub (https://npm.pkg.github.com/).
    область: # необов'язковий
    # Використовується для отримання розповсюджень вузлів із версій вузлів. Оскільки існує значення за замовчуванням, користувач зазвичай не вказує його. Під час виконання цієї дії на github.com достатньо значення за умовчанням. Під час роботи на GHES ви можете передати особистий маркер доступу для github.com, якщо у вас є обмеження швидкості.
    маркер: # необов’язковий, за умовчанням ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Використовується для визначення менеджера пакетів для кешування в каталозі за замовчуванням. Підтримувані значення: npm, yarn, pnpm.
    кеш: # необов'язковий
    # Використовується для вказівки шляху до файлу залежностей: package-lock.json, yarn.lock тощо. Підтримує символи підстановки або список імен файлів для кешування кількох залежностей.
    шлях залежностей кешу: # необов'язковий
